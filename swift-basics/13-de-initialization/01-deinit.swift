/*
Деинициализаторы
*/

// Деинициализаторы являются отличительной особенностью классов.
// Деинициализатор автоматически вызывается во время уничтожения экземпляра класса. 
// Вы не можете вызвать деинициализатор самостоятельно. Один класс может иметь максимум один деинициализатор.
// С помощью деинициализатора вы можете, например, освободить используемые экземпляром ресурсы, вывести 
// на консоль журнал или выполнить любые другие действия.

/*
СИНТАКСИС

deinit {
    // тело деинициализатора
}
*/

// Деинициализатор суперкласса наследуется подклассом и вызывается автоматически в конце работы 
// деинициализаторов подклассов. Деинициализатор суперкласса вызывается всегда, даже если 
// деинициализатор подкласса отсутствует. Кроме того, экземпляр класса не удаляется,
// пока не закончит работу деинициализатор, поэтому все значения свойств экземпляра остаются 
// доступными в теле деинициализатора.

class SuperClass {
    init?(isNil: Bool) {
        if isNil {
            return nil
        } else {
            print("Экземпляр создан")
        }
    }
    
    deinit {
        print("Деинициализатор суперкласса")
    }
}

class SubClass: SuperClass {
    deinit {
        print("Деинициализатор подкласса")
    }
}

var obj: SubClass? = SubClass(isNil: false) // Создаст объект и выведет "Экземпляр создан"
obj = nil // Деинициализатор подкласса Деинициализатор суперкласса