/*
Обработка ошибок
*/

// В отличие от необязательных параметров, которые могут использовать наличие или отсутствие значения 
// для сообщения об успешном выполнении или сбое функции, обработка ошибок позволяет определить основную причину сбоя и 
// при необходимости передать ошибку в другую часть программы.

// Когда функция сталкивается с ошибкой, она генерирует ошибку. 
// Затем вызывающая функция может перехватить ошибку и отреагировать соответствующим образом.

// Функция указывает на то, что она может вызвать ошибку, если в её объявлении есть ключевое слово throws. 
// При вызове функции, которая может вызвать ошибку, перед выражением ставится ключевое слово try.

func canThrowAnError() throws {
    // ...
}

// Swift автоматически распространяет ошибки за пределы текущей области видимости, 
// пока они не будут обработаны оператором catch.

do {
    try canThrowAnError()
} catch {
    // ...
}

// Оператор do создаёт новую область видимости, которая позволяет распространять ошибки на одно или несколько предложений catch

func makeASandwich() throws {
    // ...
}

do {
    try makeASandwich()
    eatASandwich()
} catch SandwichError.outOfCleanDishes {
    washDishes()
} catch SandwichError.missingIngredients(let ingredients) {
    buyGroceries(ingredients)
}