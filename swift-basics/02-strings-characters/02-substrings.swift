/*
Подстроки
*/

// Когда мы получаем подстроку из строки — например, с помощью индекса или метода, 
// такого как prefix(_:) — результатом является экземпляр Substring, а не другая строка.


let greeting = "Hello, world!"
let index = greeting.firstIndex(of: ",") ?? greeting.endIndex
let beginning = greeting[..<index] // "Hello"
let newString = String(beginning)

// Как и в случае со строками, у каждой подстроки есть область памяти, в которой хранятся символы, составляющие подстроку. 
// Разница между строками и подстроками заключается в том, что в качестве оптимизации производительности 
// подстрока может повторно использовать часть памяти, которая используется для хранения исходной строки, 
// или часть памяти, которая используется для хранения другой подстроки. 
// (У строк есть аналогичная оптимизация, но если две строки используют одну и ту же память, они равны.) 
// Эта оптимизация производительности означает, что вам не нужно платить за копирование памяти до тех пор, 
// пока вы не измените строку или подстроку.
// Как упоминалось выше, подстроки не подходят для длительного хранения, поскольку они повторно используют память, 
// в которой хранится исходная строка. Вся исходная строка должна храниться в памяти до тех пор, 
// пока используются какие-либо её подстроки.