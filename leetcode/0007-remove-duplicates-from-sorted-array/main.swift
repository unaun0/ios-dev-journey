/// Удаляет дубликаты из отсортированного массива на месте (in-place)
///
/// Алгоритм:
/// 1. Используем технику "двух указателей":
///    - Медленный указатель (k) отслеживает позицию для вставки уникальных элементов
///    - Быстрый указатель (i) проходит по всем элементам массива
/// 2. Сравниваем текущий элемент с предыдущим уникальным элементом
/// 3. Если элемент уникален - перемещаем его в позицию k и увеличиваем k
///
/// Требования:
/// - Модифицировать исходный массив (in-place)
/// - Первые k элементов должны содержать уникальные элементы в исходном порядке
/// - Элементы после k не важны
/// - Вернуть количество уникальных элементов (k)
///
/// Примеры:
/// removeDuplicates([1,1,2]) → (k: 2, массив: [1,2,_])
/// removeDuplicates([0,0,1,1,1,2,2,3,3,4]) → (k: 5, массив: [0,1,2,3,4,_,...])
///
/// - Parameter nums: Отсортированный массив (неубывающий порядок)
/// - Returns: Количество уникальных элементов
///

class Solution {
    func removeDuplicates(_ nums: inout [Int]) -> Int {
        guard !nums.isEmpty else { return 0 }
        let count = nums.count
        if count == 1 { return 1 }
        var k = 1
        for i in 1...(count - k) {
            if nums[i] != nums[i-1] {
                nums[k] = nums[i]
                k += 1
            }
        }
        nums.removeLast(nums.count - k)
        
        return k
    }
}