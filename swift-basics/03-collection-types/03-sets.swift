/*
–ú–Ω–æ–∂–µ—Å—Ç–≤–∞
*/

// –ù–∞–±–æ—Ä —Ö—Ä–∞–Ω–∏—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞. 

// –¢–∏–ø Set Swift —Å–≤—è–∑–∞–Ω —Å NSSet –∫–ª–∞—Å—Å–æ–º Foundation.

// –¢–∏–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ—à–∏—Ä—É–µ–º—ã–º, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –Ω–∞–±–æ—Ä–µ, 
// —Ç–æ –µ—Å—Ç—å —Ç–∏–ø –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–ø–æ—Å–æ–± –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å–µ–±—è. 
// –•–µ—à-–∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —ç—Ç–æ Int –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ, 
// —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ a == b, —Ç–æ —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏–µ a —Ä–∞–≤–Ω–æ —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏—é b.

// –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã Swift (—Ç–∞–∫–∏–µ –∫–∞–∫ String, Int, Double –∏ Bool) –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —è–≤–ª—è—é—Ç—Å—è —Ö–µ—à–∏—Ä—É–µ–º—ã–º–∏ –∏ 
// –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–∏–ø–æ–≤ –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞–±–æ—Ä–æ–≤ –∏–ª–∏ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä–µ–π.


// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞

var letters = Set<Character>()
var letters2: Set<Character> = Set<Character>()
// var letters3: Set<Character> = () // –û—à–∏–±–∫–∞

var letters4: Set<Character>
letters4 = [] // –ü—É—Å—Ç–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –ø–æ–º–æ—â—å—é –ª–∏—Ç–µ—Ä–∞–ª–∞ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ —Å –ø–æ–º–æ—â—å—é –ª–∏—Ç–µ—Ä–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

var favoriteGenres1: Set<String> = ["Rock", "Classical", "Hip hop"]
var favoriteGenres: Set = ["Rock", "Classical", "Hip hop"]

// –î–æ—Å—Ç—É–ø –∫ –º–Ω–æ–∂–µ—Å—Ç–≤—É –∏ –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–∞—Å—Å–∏–≤–∞–º, –∫—Ä–æ–º–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ - –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–æ

/*
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏
*/

let oddDigits: Set = [1, 3, 5, 7, 9]
let evenDigits: Set = [0, 2, 4, 6, 8]
let singleDigitPrimeNumbers: Set = [2, 3, 5, 7]


oddDigits.union(evenDigits).sorted() // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
oddDigits.intersection(evenDigits).sorted() // –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ
// []
oddDigits.subtracting(singleDigitPrimeNumbers).sorted() // –í—ã—á–∏—Ç–∞–Ω–∏–µ
// [1, 9]
oddDigits.symmetricDifference(singleDigitPrimeNumbers).sorted() // –°–∏–º–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–Ω–æ—Å—Ç—å
// [1, 2, 9]

/*
–ß–ª–µ–Ω—Å—Ç–≤–æ –∏ –†–∞–≤–µ–Ω—Å—Ç–≤–æ
*/

let houseAnimals: Set = ["üê∂", "üê±"]
let farmAnimals: Set = ["üêÆ", "üêî", "üêë", "üê∂", "üê±"]
let cityAnimals: Set = ["üê¶", "üê≠"]


houseAnimals.isSubset(of: farmAnimals) // isSubset - A - –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ B
// true
farmAnimals.isSuperset(of: houseAnimals) // isSuperset - –º–Ω–æ–∂–µ—Å—Ç–≤–æ B –≤–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ A
// true
farmAnimals.isDisjoint(with: cityAnimals) // A –∏ B –Ω–µ –∏–º–µ—é—Ç –æ–±—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
// true